/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Represent a Type.
 */
export interface Type {
    /**
     * Schema URL.
     */
    $schema?: string;
    /**
     * The name of the schema.
     */
    name: string;
    /**
     * The label of the schema.
     */
    label: string;
    /**
     * The description of the schema.
     */
    description: string;
    /**
     * The parent ID of the schema.
     */
    parent: string;
    /**
     * If the schema is abstract or not.
     */
    isAbstract: boolean;
    /**
     * The fields for the schema.
     */
    fields: {
        [k: string]: Field;
    };
}
/**
 * Field of a Type.
 */
export interface Field {
    /**
     * Type of the field.
     */
    type: string;
    /**
     * Label of the field.
     */
    label: string;
    /**
     * Description of the field.
     */
    description: string;
    /**
     * The default value if not given.
     */
    defaultValue:
        | number
        | string
        | boolean
        | {
              [k: string]: unknown;
          }
        | unknown[]
        | null;
}

/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Collection information.
 */
export interface Collection {
    /**
     * Schema URL.
     */
    $schema?: string;
    /**
     * ID of the collection.
     */
    id: string;
    /**
     * Label of the collection.
     */
    label: string;
    /**
     * Description of the collection.
     */
    description: string;
    /**
     * URL for the collection image.
     */
    image: string;
    [k: string]: unknown;
}
